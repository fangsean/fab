线上分布式服务自动化部署工具操作说明
功能说明
为方便运维人员操作多主机服务部署，定制服务发布工具，进行多主机批量处理
版本号：
Version:2.0
适用环境
根据 nq.ini 文件进行配置 服务，远程主机，以及路径相关信息，
以及./config/$(*).json文件 配置主机，服务之间的依赖映射关系。
提供功能有如下步骤：
1.	git 执行代码更新任务
2.	go 执行发布任务
3.	backup 执行回退任务
4.	jar 打包服务 ##被依赖的不需要发布的服务情况##
5.	kill 停止服务进程
6.	restart  重启服务进程
7.	encrypt 加密字符串密码
8.	test 测试
________________________________________
命令帮助
[root@localhost /]# nq --help
Usage: nq [OPTIONS] COMMAND [ARGS]...

Options:
  --help  Show this message and exit.

Commands:
  backup   执行回退任务
  encrypt  加密字符串密码
  git      执行代码更新任务
  go       执行发布任务
  jar      打包服务 ##被依赖的不需要发布的服务情况##
  kill     停止服务进程
  restart  重启服务进程
  test     测试

操作说明：
操作控制台环境：
【主机】：192.168.1.13
【用户】：root
【密码】：*** 
【目录】：~/
【命令】：Usage: nq [OPTIONS] COMMAND [ARGS]...
________________________________________
以下步骤根据实际情况操作！
1.操作本地代码库
构建本地代码库，更新分支代码
[root@localhost fab]# nq git
***git 执行代码更新任务***
        参数缺失！
        请输入[model]参数：
['bsweb', 'tradeweb', 'scmweb', 'sellerweb']
        请输入[branch]参数:
['developer']
        如 git  --model bsweb --branch developer
================ Break ==================
nq git --model bsweb --branch jsen_branch ## 使用jsen_branch分支 构建本地bsweb代码库

...等待控制台提示执行完成
2.远程发布服务
代码打包，远程发包，控制进程，远程部署，验证发布结果
[root@localhost fab]# nq go
***go 执行发布任务***
        参数缺失！
        请输入[model]参数：
['bsweb', 'tradeweb', 'scmweb', 'sellerweb']
        请输入[deploy]参数:
['pre', 'prod', 'test', 'dev']
        如 go  --model bsweb --deploy pre 
================ Break ==================

nq go --model bsweb --deploy pre ##使用pre环境打包本地bsweb代码库,发布服务到bsweb
3.远程回退服务
发布版本的远程回退，控制进程，远程部署，验证发布结果
[root@localhost fab]# nq  backup
***backup 执行回退任务***
        参数缺失！
        请输入[model]参数：
['bsweb', 'tradeweb', 'scmweb', 'sellerweb']
        请输入[deploy]参数:
['pre', 'prod', 'test', 'dev']
        如 backup  --mode bsweb --deploy pre 
================ Break ==================

nq backup --mode bsweb --deploy pre #通过指定的备份文件 回退bsweb的pre环境版本服务
4.打包服务
用于打包本地服务jar包：被依赖的不需要发布的服务情况下，只需打包，不需要要发布应用服务
5.停止服务进程
用于远程停止服务：需要临时停止远程服务情况
6.重启服务进程
用于远程重启服务：由于特殊原因，需要重启远程服务情况
7.加密字符串
用于修改配置文件passwd参数 [Account]:password
[root@localhost fab]# nq encrypt 123456
***encrypt 加密字符串密码***
        input passwd:123456
        encrypt passwd:5143a697960a38d8c6d0e2edc6ff8188
================ END ==================
________________________________________
配置文件说明
根据自己的需要，添加配置
比如：新建了一个工程，需要搭建一套自动化服务，部署到自定义环境中，那么添加git远程仓库以及本地库路径，然后添加配置 需要部署的主机（统一用户密码），以及服务名，等配置信息，即可 然后根据命令行提示进行操作自动化部署服务。
很方便通过配置进行服务模块的扩展^^
注意一：主机用户密码更换，使用加密命令进行加密
注意二：扩展服务主机需要将该主机添加映射到本地主机hosts文件

Nq.ini文件

#################该区域配置为： 基本配置 #####################
[Apps]
domain = nqtown

;访问参数
[Account]
;用户
user = admin
;加密后的密码
password = 72eb150361d194b1d414a0da83d885e4

[branch]
;无效
branch = developer

;环境版本
[deploy]
pre = 预发
prod = 生产
test = 测试
dev = 本地

;远程hosts列表
[hosts]
;采用host别名，暂时禁止
host1 = Nq001
host2 = Nq002
host3 = Nq003
host4 = Nq004
host5 = Nq005
host6 = Nq006
host7 = Nq007
host8 = localhost
;... ...添加n个,key键不冲突就行
###################################!

;服务归类
[servers]
bsweb = 后台公共服务系统
tradeweb = 前台客户系统
scmweb = 后台管理系统
sellerweb = 后台管理系统

;server对应哪些host主机，必须在[hosts]中选择，[hosts]列表没有的一次添加，key键不冲突就行
[server_hosts]
;bsweb =
;tradeweb =
;scmweb =
;sellerweb =

;server角色分组
[server_roledefs]


;更新代码地址
[path_git]
bsweb = git@git.coding.net:shenlan/nq_basicservice.git
tradeweb = git@git.coding.net:shenlan/nq_tradeweb.git
scmweb = git@git.coding.net:shenlan/nq_scmweb.git
sellerweb = git@git.coding.net:shenlan/nq_sellerweb.git

;本地代码库，工作空间
[path_local]
;工作空间根目录
root = /root/work/
bsweb = /root/work/nq_basicservice/
tradeweb = /root/work/nq_tradeweb/
scmweb = /root/work/nq_scmweb/
sellerweb = /root/work/nq_sellerweb/

;本地jar包存放地址
[path_local_target]
bsweb = /root/work/nq_basicservice/bs-web/target/
tradeweb = /root/work/nq_tradeweb/target/
scmweb = /root/work/nq_scmweb/target/
sellerweb = /root/work/nq_sellerweb/target/


;远程主机对应服务地址
[path_remote]
bsweb = /home/admin/bsweb/
tradeweb = /home/admin/tradeweb/
scmweb = /home/admin/scmweb/
sellerweb = /home/admin/sellerweb/




server_hosts 文件

{
  "bsweb":{
	  "prod":["host1","host2"],
	  "pre":["host3"],
	  "test":["host8"],
	  "dev":["host8"]
  },
  "tradeweb": {
	  "prod":["host1","host2"],
	  "pre":["host7"],
	  "test":["host8"],
	  "dev":["host8"]
  },
  "scmweb": {
	  "prod":["host3","host4"],
	  "pre":["host7"],
	  "test":["host8"],
	  "dev":["host8"]
  },
  "sellerweb": {
	  "prod":["host5","host6"],
	  "pre":["host7"],
	  "test":["host8"],
	  "dev":["host8"]
  }
}



